#!/usr/bin/env python3
"""
usb_detector.py - D√©tection en temps r√©el d'une cl√© USB physique sous Linux

Ce script p√©dagogique utilise la biblioth√®que `pyudev` pour d√©tecter automatiquement
l'insertion d'une cl√© USB. Il affiche le nom du p√©riph√©rique, son point de montage
(et son contenu s'il est mont√©).

‚ö†Ô∏è Usage p√©dagogique uniquement. Aucune responsabilit√© en cas de modification,
utilisation en production ou redistribution. Licence : MIT.
"""

import os
import pyudev
from datetime import datetime

# Initialisation du syst√®me de surveillance udev
context = pyudev.Context()
monitor = pyudev.Monitor.from_netlink(context)
monitor.filter_by(subsystem='block', device_type='partition')

print("üü¢ En attente d'une cl√© USB... (CTRL+C pour quitter)")

try:
for device in iter(monitor.poll, None):
if device.action != 'add':
continue

device_node = device.device_node
device_name = os.path.basename(device_node)
mount_point = None

# V√©rifie si le p√©riph√©rique est mont√©
with open("/proc/mounts", 'r') as f:
for line in f:
if device_node in line:
mount_point = line.split()[1]
break

# Affiche les infos
print(f"\nüïí {datetime.now()} - Cl√© USB d√©tect√©e : {device_name}")
if mount_point:
print(f"üìÇ Mont√©e sur : {mount_point}")
print("üìÅ Contenu :")
for root, dirs, files in os.walk(mount_point):
for file in files:
print(f" - {os.path.join(root, file)}")
else:
print(f"‚ö†Ô∏è Cl√© d√©tect√©e ({device_name}) mais non mont√©e.")
except KeyboardInterrupt:
print("\nüõë Surveillance arr√™t√©e par l'utilisateur.")
